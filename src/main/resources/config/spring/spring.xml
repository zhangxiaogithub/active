<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- http://code.alibabatech.com/schema/dubbo -->
	<!-- http://code.alibabatech.com/schema/dubbo/dubbo.xsd -->

	<context:component-scan base-package="com.active" />

	<!-- 扫描注解包路径，多个包用逗号分隔，不能为空或者 * -->
	<!-- <dubbo:annotation package="com.active" /> -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- ***************************配置数据源 开始******************************* -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
		<property name="validationQuery" value="select 1" />
	</bean>
	<!-- ***************************配置数据源 结束******************************* -->

	<!-- ***************************配置Spring的事务管理器 开始******************************* -->
	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<!-- <tx:method name="*" propagation="SUPPORTS" /> -->
		</tx:attributes>
	</tx:advice>

	<!-- 配置事务切面 -->
	<!-- <aop:config> -->
	<!-- <aop:pointcut id="transactionPointcut" -->
	<!-- expression="execution(* com.active.service.impl..*.*(..))" /> -->
	<!-- <aop:advisor pointcut-ref="transactionPointcut" -->
	<!-- advice-ref="transactionAdvice" /> -->
	<!-- </aop:config> -->
	<!-- ***************************配置Spring的事务管理器 结束******************************* -->

<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="unifiedLogAspect" ref="logAspect"> -->
<!-- 			<aop:pointcut id="logPointcut" -->
<!-- 				expression="execution(* com.active.service.impl..*.*(..))" /> -->
<!-- 			<aop:before pointcut-ref="logPointcut" method="doBefore" /> -->
<!-- 			<aop:after pointcut-ref="logPointcut" method="doAfter" /> -->
<!-- 			<aop:around pointcut-ref="logPointcut" method="doAround" /> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->

<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="unifiedExecTimeAspect" ref="execTimeAspect"> -->
<!-- 			<aop:pointcut id="execTimePointcut" -->
<!-- 				expression="execution(* com.active.service.impl..*.*(..))" /> -->
<!-- 			<aop:around pointcut-ref="execTimePointcut" method="doAround" /> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	

</beans>